# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/book/service_container.html
parameters:
    default_locale: de

    # parameter_name: value
    google_api_key: '%env(GOOGLE_API_KEY)%'
    twitter_api_key: '%env(TWITTER_API_KEY)%'
    twitter_api_secret: '%env(TWITTER_API_SECRET)%'
    twitter_access_token: '%env(TWITTER_ACCESS_TOKEN)%'
    twitter_access_secret: '%env(TWITTER_ACCESS_SECRET)%'
    
    # AI Parameters
    gemini_api_key: '%env(GEMINI_API_KEY)%'
    gemini_model: 'gemini-1.5-flash'
    gemini_base_url: 'https://generativelanguage.googleapis.com/v1beta'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        bind:
            $twitter_api_key: '%twitter_api_key%'
            $twitter_api_secret: '%twitter_api_secret%'
            $twitter_access_token: '%twitter_access_token%'
            $twitter_access_secret: '%twitter_access_secret%'
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.



    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    \Twig_Extensions_Extension_Intl:
        class: Twig_Extensions_Extension_Intl

    Google_Client:
        class: \Google_Client
        calls:
            - method: setApplicationName
              arguments:
                  - 'API Samples'

            - method: setDeveloperKey
              arguments:
                  - '%google_api_key%'

    Google_Service_YouTube:
        class: \Google_Service_YouTube
        arguments:
            - '@Google_Client'
    
    # AI Platform Services
    App\AI\GeminiProvider:
        arguments:
            $apiKey: '%gemini_api_key%'
            $model: '%gemini_model%'
            $baseUrl: '%gemini_base_url%'
        public: true
    
    App\AI\Platform\AIPlatform:
        calls:
            - method: addProvider
              arguments:
                - 'gemini'
                - '@App\AI\GeminiProvider'
            - method: setDefaultProvider
              arguments:
                - 'gemini'
        public: true
        
    App\AI\AIContentService:
        arguments:
            $enabled: true
        public: true
        
    # AI Service Aliases (public for testing)
    ai.content:
        alias: App\AI\AIContentService
        public: true
    ai.platform:
        alias: App\AI\Platform\AIPlatform
        public: true
    ai.gemini:
        alias: App\AI\GeminiProvider
        public: true
        
    # Sulu Document Manager Alias for API Controller
    Sulu\Component\DocumentManager\DocumentManagerInterface:
        alias: sulu_document_manager.document_manager
        public: true

