{% import "_message.html.twig" as message %}

<div class="max-w-4xl mx-auto">
    <!-- Header with Robot and Title - Always visible -->
    <div class="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-t-lg shadow-sm p-4 md:p-6">
        <div class="flex items-center gap-4">
            <img id="robot-image" src="/robot.png" alt="Robot Golla" class="w-16 h-16 md:w-20 md:h-20 object-contain rounded-full bg-white p-2 shadow-sm">
            <div>
                <h2 class="text-2xl md:text-3xl font-bold text-gray-900">Never Code Alone Chat</h2>
                <p class="text-sm md:text-base text-gray-600">Dein AI-Assistent f√ºr YouTube-Inhalte</p>
            </div>
        </div>
    </div>
    
    <!-- Chat Messages Area -->
    <div class="bg-white shadow-lg">
        <div id="chat-body" class="h-[60vh] md:h-[400px] overflow-y-auto p-4 md:p-6 scroll-smooth">
                {% if messages is defined %}
                    {% for message in messages %}
                        {% include '_message.html.twig' with { message, latest: loop.last } %}
                    {% endfor %}
                {% else %}
                    <!-- Welcome Message -->
                    <div id="welcome" class="flex items-start gap-3 mb-4">
                        <div class="flex-shrink-0 w-10 h-10 rounded-full bg-blue-100 flex items-center justify-center">
                            ü§ñ
                        </div>
                        <div class="flex-1 bg-gray-50 rounded-lg p-4 max-w-2xl">
                            <h4 class="text-lg font-semibold text-gray-800 mb-2">Hallo Freunde des Software-Entertainments!</h4>
                            <p class="text-gray-600 leading-relaxed">
                                Ich bin Robot Golla, euer AI-Assistent f√ºr alle Fragen rund um die YouTube-Videos von <strong>Never Code Alone</strong>.
                            </p>
                            <div class="mt-3 space-y-2 text-sm text-gray-600">
                                <p>üí° <strong>Was ich kann:</strong></p>
                                <ul class="ml-6 space-y-1">
                                    <li>‚Ä¢ Fragen zu PHP, Symfony, Laravel beantworten</li>
                                    <li>‚Ä¢ Coding-Tutorials und Best Practices erkl√§ren</li>
                                    <li>‚Ä¢ Inhalte aus den YouTube-Videos finden</li>
                                </ul>
                            </div>
                            <p class="mt-3 text-sm text-gray-500">
                                Stelle einfach deine Frage im Eingabefeld unten! üëá
                            </p>
                        </div>
                    </div>
                {% endif %}
                <div id="loading-message" class="hidden">
                    <!-- Loading indicator will be inserted here -->
                </div>
            </div>
        </div>
        
        <!-- Input area - Always at bottom -->
        <div class="border-t border-gray-200 bg-gray-50 p-4 rounded-b-lg">
            <div class="flex gap-2">
                <input id="chat-message" type="text" class="flex-1 px-4 py-3 bg-white border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-all" placeholder="Stelle deine Frage hier...">
                <button id="chat-submit" class="px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-all font-medium" type="button">
                    Senden
                </button>
            </div>
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const chatInput = document.getElementById('chat-message');
    const chatSubmit = document.getElementById('chat-submit');
    const chatBody = document.getElementById('chat-body');
    const loadingMessage = document.getElementById('loading-message');

    function formatMarkdown(text) {
        // Convert markdown to HTML
        return text
            // Headers
            .replace(/### (.*?)$/gm, '<h3 class="font-bold text-lg mt-3 mb-2 text-gray-800">$1</h3>')
            .replace(/## (.*?)$/gm, '<h2 class="font-bold text-xl mt-4 mb-2 text-gray-800">$1</h2>')
            .replace(/# (.*?)$/gm, '<h1 class="font-bold text-2xl mt-4 mb-3 text-gray-800">$1</h1>')
            // Bold
            .replace(/\*\*(.*?)\*\*/g, '<strong class="font-semibold text-gray-900">$1</strong>')
            // Links
            .replace(/\[([^\]]+)\]\(([^)]+)\)/g, '<a href="$2" target="_blank" class="text-blue-600 hover:text-blue-800 underline">$1</a>')
            // Lists
            .replace(/^- (.*?)$/gm, '<li class="ml-4">‚Ä¢ $1</li>')
            .replace(/^\* (.*?)$/gm, '<li class="ml-4">‚Ä¢ $1</li>')
            // Line breaks
            .replace(/\n/g, '<br>');
    }

    function sendMessage() {
        const message = chatInput.value.trim();
        if (!message) return;

        // Remove welcome message if it exists
        const welcome = document.getElementById('welcome');
        if (welcome) {
            welcome.remove();
        }

        // Add user message
        const userMessageDiv = document.createElement('div');
        userMessageDiv.className = 'flex justify-end gap-3 mb-4';
        userMessageDiv.innerHTML = `
            <div class="max-w-xs md:max-w-md">
                <div class="bg-blue-600 text-white px-4 py-3 rounded-lg">
                    ${message}
                </div>
            </div>
            <div class="flex-shrink-0 w-10 h-10 rounded-full bg-gray-100 flex items-center justify-center">
                üë§
            </div>
        `;
        chatBody.appendChild(userMessageDiv);

        // Create loading message and append to chat body
        const loadingDiv = document.createElement('div');
        loadingDiv.className = 'flex items-start gap-3 mb-4';
        loadingDiv.id = 'current-loading';
        loadingDiv.innerHTML = `
            <div class="flex-shrink-0 w-10 h-10 rounded-full bg-blue-100 flex items-center justify-center">
                ü§ñ
            </div>
            <div class="bg-gray-50 rounded-lg p-4">
                <div class="flex items-center gap-2">
                    <div class="animate-pulse flex gap-1">
                        <div class="w-2 h-2 bg-gray-400 rounded-full"></div>
                        <div class="w-2 h-2 bg-gray-400 rounded-full animation-delay-200"></div>
                        <div class="w-2 h-2 bg-gray-400 rounded-full animation-delay-400"></div>
                    </div>
                    <span class="text-gray-500 text-sm">Robot Golla denkt nach...</span>
                </div>
            </div>
        `;
        chatBody.appendChild(loadingDiv);
        chatInput.value = '';
        
        // Smooth scroll only if needed
        if (chatBody.scrollHeight > chatBody.clientHeight) {
            chatBody.scrollTop = chatBody.scrollHeight;
        }

        // Call real AI endpoint
        fetch('/api/chat/submit', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ message: message })
        })
        .then(response => response.json())
        .then(data => {
            // Find and replace the current loading message
            const currentLoading = document.getElementById('current-loading');
            if (currentLoading && data.success) {
                currentLoading.innerHTML = `
                    <div class="flex-shrink-0 w-10 h-10 rounded-full bg-blue-100 flex items-center justify-center">
                        ü§ñ
                    </div>
                    <div class="flex-1 bg-gray-50 rounded-lg p-4 max-w-2xl">
                        <div class="text-gray-700 leading-relaxed">
                            ${formatMarkdown(data.response)}
                        </div>
                    </div>
                `;
                currentLoading.removeAttribute('id'); // Remove id so next loading gets a fresh one
                
                // Check if response is the sleep message (rate limited)
                if (data.response.includes('schlafen komm morgen wieder')) {
                    // Change robot image to sleeping
                    const robotImage = document.getElementById('robot-image');
                    if (robotImage) {
                        robotImage.src = '/robot-sleeping.png';
                    }
                    // Hide the input form
                    const inputContainer = document.querySelector('.border-t.border-gray-200.bg-gray-50');
                    if (inputContainer) {
                        inputContainer.style.display = 'none';
                    }
                }
            } else if (currentLoading) {
                // Replace loading with error message
                currentLoading.innerHTML = `
                    <div class="flex-shrink-0 w-10 h-10 rounded-full bg-red-100 flex items-center justify-center">
                        ‚ùå
                    </div>
                    <div class="flex-1 bg-red-50 border border-red-200 rounded-lg p-4 max-w-2xl">
                        <div class="text-red-700">
                            Entschuldigung, es ist ein Fehler aufgetreten. Bitte versuche es sp√§ter erneut.
                        </div>
                    </div>
                `;
                currentLoading.removeAttribute('id');
            }
            
            // Smooth scroll to bottom
            if (chatBody.scrollHeight > chatBody.clientHeight) {
                chatBody.scrollTop = chatBody.scrollHeight;
            }
        })
        .catch(error => {
            console.error('Error:', error);
            
            // Replace loading with network error
            const currentLoading = document.getElementById('current-loading');
            if (currentLoading) {
                currentLoading.innerHTML = `
                    <div class="flex-shrink-0 w-10 h-10 rounded-full bg-red-100 flex items-center justify-center">
                        ‚ö†Ô∏è
                    </div>
                    <div class="flex-1 bg-red-50 border border-red-200 rounded-lg p-4 max-w-2xl">
                        <div class="text-red-700">
                            Netzwerkfehler: Bitte √ºberpr√ºfe deine Internetverbindung und versuche es erneut.
                        </div>
                    </div>
                `;
                currentLoading.removeAttribute('id');
            }
        });
    }

    chatSubmit.addEventListener('click', sendMessage);
    chatInput.addEventListener('keypress', function(e) {
        if (e.key === 'Enter') {
            sendMessage();
        }
    });
});
</script>
