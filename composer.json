{
    "name": "rogoit/cms-symfony-sulu",
    "license": "MIT",
    "type": "project",
    "description": "Content marketing page with CMS based on Symfony and Sulu",
    "homepage": "https://nevercodealone.de",
    "keywords": [
        "symfony",
        "sulu",
        "sulucms",
        "cms"
    ],
    "authors": [
        {
            "name": "Roland Golla",
            "homepage": "https://rolandgolla.de"
        }
    ],
    "require": {
        "php": "8.2.*",
        "ext-ctype": "*",
        "ext-iconv": "*",
        "ext-zip": "*",
        "doctrine/dbal": "^2.10",
        "doctrine/doctrine-bundle": "^2.3",
        "doctrine/doctrine-fixtures-bundle": "^3.4",
        "doctrine/doctrine-migrations-bundle": "^3.1",
        "friendsofsymfony/http-cache-bundle": "^2.10",
        "friendsofsymfony/rest-bundle": "^3.4",
        "google/apiclient": "^2.9",
        "handcraftedinthealps/zendsearch": "^2.1",
        "jackalope/jackalope-doctrine-dbal": "^1.6|^2.0",
        "phpcr/phpcr-migrations-bundle": "^1.2",
        "robole/sulu-ai-translator-bundle": "^1.1",
        "stof/doctrine-extensions-bundle": "^1.7",
        "sulu/headless-bundle": "^0.10.0",
        "sulu/sulu": "2.6.0",
        "symfony/config": "^6.0",
        "symfony/dotenv": "^6.0",
        "symfony/flex": "^1.12",
        "symfony/framework-bundle": "^6.0",
        "symfony/monolog-bridge": "^6.0",
        "symfony/monolog-bundle": "^3.7",
        "symfony/security-bundle": "^6.0",
        "symfony/twig-bundle": "^6.0",
        "symfony/webpack-encore-bundle": "^1.16",
        "twig/extra-bundle": "^3.3",
        "twig/intl-extra": "^3.3"
    },
    "require-dev": {
        "captainhook/captainhook": "^5.9",
        "infection/infection": "^0.29.8",
        "phpcr/phpcr-shell": "^1.3",
        "phpstan/extension-installer": "^1.2",
        "phpstan/phpstan-doctrine": "^1.3",
        "phpunit/phpunit": "^10.5",
        "rector/rector": "^0.17",
        "squizlabs/php_codesniffer": "^3.6",
        "symfony/debug-bundle": "^6.0",
        "symfony/error-handler": "^6.0",
        "symfony/phpunit-bridge": "^6.0",
        "symfony/thanks": "^1.2",
        "symfony/web-profiler-bundle": "^6.0"
    },
    "autoload": {
        "psr-4": {
            "App\\": "src/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "App\\Tests\\": "tests/"
        }
    },
    "replace": {
        "paragonie/random_compat": "2.*",
        "symfony/polyfill-ctype": "*",
        "symfony/polyfill-iconv": "*",
        "symfony/polyfill-php72": "*",
        "symfony/polyfill-php71": "*",
        "symfony/polyfill-php70": "*",
        "symfony/polyfill-php56": "*"
    },
    "scripts": {
        "auto-scripts": {
            "cache:clear": "symfony-cmd",
            "assets:install %PUBLIC_DIR%": "symfony-cmd",
            "bin/websiteconsole cache:clear": "php-script",
            "bin/adminconsole sulu:media:init": "php-script",
            "bin/adminconsole massive:search:init": "php-script"
        },
        "post-install-cmd": [
            "@auto-scripts"
        ],
        "post-update-cmd": [
            "@auto-scripts"
        ],
        "post-root-package-install": [
            "@php -r \"file_put_contents('.env.local', 'APP_ENV=dev' . PHP_EOL);\"",
            "@php -r \"file_put_contents('.env', str_replace('APP_SECRET=', 'APP_SECRET=' . bin2hex(random_bytes(16)), file_get_contents('.env')));\""
        ],
        "post-create-project-cmd": [
            "@php -r \"file_put_contents('.gitignore', str_replace(['composer.lock' . PHP_EOL, 'symfony.lock' . PHP_EOL, 'package-lock.json' . PHP_EOL], ['', '', ''], file_get_contents('.gitignore')));\"",
            "@php bin/adminconsole sulu:admin:info --ansi"
        ],
        "bootstrap-test-environment": [
            "@php bin/adminconsole doctrine:database:drop --if-exists --force --env test",
            "@php bin/adminconsole doctrine:database:create --env test",
            "@php bin/adminconsole doctrine:schema:create --env test"
        ],
        "test": "@php bin/phpunit",
        "test-with-coverage": "@test --coverage-php var/reports/coverage.php --coverage-cobertura=var/reports/cobertura-coverage.xml --coverage-html var/reports/html --log-junit var/reports/junit.xml",
        "lint": [
            "@phpstan",
            "@lint-php-cs",
            "@lint-rector",
            "@lint-twig",
            "@lint-yaml",
            "@lint-container",
            "@lint-composer",
            "@lint-doctrine"
        ],
        "security-check": "@composer audit",
        "fix": [
            "@rector",
            "@php-cs-fix"
        ],
        "phpstan": [
            "@php bin/websiteconsole cache:warmup --env=dev",
            "@php vendor/bin/phpstan analyze"
        ],
        "rector": [
            "@php vendor/bin/rector process"
        ],
        "lint-rector": [
            "@php bin/websiteconsole cache:warmup --env=dev",
            "@php vendor/bin/rector process --dry-run"
        ],
        "php-cs-fix": "@php vendor/bin/php-cs-fixer fix",
        "lint-php-cs": "@php vendor/bin/php-cs-fixer fix --verbose --diff --dry-run",
        "lint-composer": "@composer validate --no-check-publish --strict",
        "lint-twig": "@php bin/console lint:twig templates/",
        "lint-yaml": "@php bin/console lint:yaml config/ --parse-tags",
        "lint-container": [
            "@php bin/console lint:container --env dev",
            "@php bin/console lint:container --env test",
            "@php bin/console lint:container --env stage",
            "@php bin/console lint:container --env prod"
        ],
        "lint-doctrine": [
            "@php bin/console doctrine:schema:validate --skip-sync",
            "@php bin/console doctrine:ensure-production-settings --env stage",
            "@php bin/console doctrine:ensure-production-settings --env prod"
        ]
    },
    "config": {
        "sort-packages": true,
        "allow-plugins": {
            "composer/package-versions-deprecated": true,
            "infection/extension-installer": true,
            "php-http/discovery": true,
            "phpstan/extension-installer": true,
            "symfony/flex": true,
            "symfony/thanks": true
        }
    },
    "extra": {
        "symfony": {
            "require": "6.3.*",
            "allow-contrib": true
        }
    }
}
